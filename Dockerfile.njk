FROM --platform=${TARGETPLATFORM} ghcr.io/jmuchovej/baseimage:metabuilder-latest
ARG TARGETPLATFORM
ARG BUILD_DATE

LABEL MAINTAINER "John Muchovej <jmuchovej@pm.me>" \
      CONTAINER "jmuchovej/baseimage:{{ dockerTag }}"

ENV PYENV_ROOT="/usr/local/pyenv"
ENV NVM_DIR="/usr/local/nvm"
ENV R_HOME="/usr/local/R"
ENV JULIAUP_ROOT="/usr/local/juliaup"
ENV JULIA_ROOT="/usr/local/julia"
ENV JULIA_DEPOT_PATH="${JULIA_ROOT}:${JULIA_DEPOT_PATH}"
ENV PATH="/usr/local/bin:${PATH}"

{%- if versions.python %}
# region Python Setup
ENV PATH="${PYENV_ROOT}/shims:${PYENV_ROOT}/bin:${PATH}"
RUN pip install pipenv; \
    curl https://pyenv.run | bash; \
    ${PYENV_ROOT}/bin/pyenv install {{ versions.python }}; \
    chmod 2775 ${PYENV_ROOT} && chown -R abc:abc ${PYENV_ROOT};
# endregion
{% endif %}

{%- if versions.julia %}
# region Julia Setup
ENV PATH="${JULIAUP_ROOT}/bin:${PATH}"
RUN curl -fsSL https://install.julialang.org \
        | sh -s -- --yes --default-channel {{ versions.julia }}; \
    rsync -av ${HOME}/.juliaup/ ${JULIAUP_ROOT}; \
    chmod 2775 ${JULIAUP_ROOT} ${JULIA_ROOT} && chown -R abc:abc ${JULIAUP_ROOT} ${JULIA_ROOT};
# endregion
{% endif %}

{%- if versions.rbase %}
# region R Setup
ENV PATH="${R_HOME}/bin:${PATH}"
RUN mkdir -p ${R_HOME}; \
    apt update -yq; \
    apt install \
        r-base={{ versions.rbase }}-* \
        r-base-dev={{ versions.rbase }}-* \
            r-base-core={{ versions.rbase }}-* \
        r-recommended={{ versions.rbase }}-* \
    ; \
    rm -rf /var/lib/apt/lists/*; \
    apt clean; \
    chmod 2775 ${R_HOME} && chown -R abc:abc ${R_HOME};
# endregion
{% endif %}

{%- if versions.node %}
# region Node.js Setup
ENV PATH="${NVM_DIR}/bin:${PATH}"
RUN mkdir -p ${NVM_DIR}; \
    curl -fsSL -o- https://github.com/nvm-sh/nvm/raw/master/install.sh | bash; \
    \. ${NVM_DIR}/nvm.sh; \
    nvm install {{ versions.node }}; \
    nvm alias default {{ versions.node }}; \
    nvm use default; \
    chmod 2775 ${NVM_DIR} && chown -R abc:abc ${NVM_DIR};
# endregion
{% endif -%}
