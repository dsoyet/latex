FROM --platform=${TARGETPLATFORM} ghcr.io/jmuchovej/baseimage:metabuilder-latest
ARG TARGETPLATFORM
ARG BUILD_DATE

LABEL MAINTAINER "John Muchovej <jmuchovej@pm.me>" \
      CONTAINER "jmuchovej/baseimage:{{ dockerTag }}"

ENV PYENV_ROOT "/usr/local/pyenv" \
    NVM_DIR "/usr/local/nvm" \
    R_HOME "/usr/local/R" \
    JULIAUP_ROOT "/usr/local/juliaup" \
    JULIA_DEPOT_PATH "/usr/local/julia:${JULIA_DEPOT_PATH}" \
    PATH "/usr/local/bin:${PATH}"

{%- if versions.python %}
# region Python Setup
ENV PATH "${PYENV_ROOT}/shims:${PYENV_ROOT}/bin:${PATH}"
RUN pip install pipenv; \
    curl https://pyenv.run | PYENV_ROOT=/tmp/pyenv bash; \
    rsync -av /tmp/pyenv/ ${PYENV_ROOT}; \
    rm -rf /tmp/pyenv; \
    ${PYENV_ROOT}/bin/pyenv install {{ versions.python }} 
# endregion
{% endif %}

{%- if versions.julia %}
# region Julia Setup
ENV PATH "${JULIAUP_ROOT}/bin:${PATH}"
RUN curl -fsSL https://install.julialang.org \
    | sh -s -- \
        --yes --default-channel {{ versions.julia }} -p ${JULIAUP_PATH};
# endregion
{% endif %}

{%- if versions.rbase %}
# region R Setup
ENV PATH "${R_HOME}/bin:${PATH}"
RUN apt install \
        r-base={{ versions.rbase }}-* \
        r-base-dev={{ versions.rbase }}-* \
            r-base-core={{ versions.rbase }}-* \
        r-recommended={{ versions.rbase }}-* \
    ; \
    rm -rf /var/lib/apt/lists/*; \
    apt clean;
# endregion
{% endif %}

{%- if versions.node %}
# region Node.js Setup
ENV PATH "${NVM_DIR}/bin:${PATH}"
RUN curl -o- https://github.com/nvm-sh/nvm/raw/master/install.sh \
        | NVM_DIR=${NVM_DIR} bash; \
    . ${NVM_DIR}/nvm.sh; \
    nvm install {{ versions.node }}; \
    nvm alias default {{ versions.node }}; \
    nvm use default
# endregion
{% endif -%}
