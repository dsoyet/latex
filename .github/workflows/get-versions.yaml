name: "Check versions of relevant programming languages"

on:
  push:
    paths:
      - ".github/workflows/get-versions.yaml"
      - ".github/workflows/get-versions-builder.yaml"
      - "versions.d/get-versions.mjs"
      - "versions.d/_sources.jsonc"
  schedule:
    - cron: "5 4 * * */7"
  workflow_dispatch:
  workflow_call:

jobs:
  check-python:
    if: "${{ always() }}"
    uses: "./.github/workflows/get-versions-builder.yaml"
    with:
      language: "python"
    secrets: "inherit"

  check-julia:
    if: "${{ always() }}"
    needs: ["check-python"]
    uses: "./.github/workflows/get-versions-builder.yaml"
    with:
      language: "julia"
    secrets: "inherit"

  check-node:
    if: "${{ always() }}"
    needs: ["check-julia"]
    uses: "./.github/workflows/get-versions-builder.yaml"
    with:
      language: "node"
    secrets: "inherit"

  check-rbase:
    if: "${{ always() }}"
    needs: ["check-node"]
    uses: "./.github/workflows/get-versions-builder.yaml"
    with:
      language: "rbase"
    secrets: "inherit"

  compute-versions:
    if: "${{ always() }}"
    needs: ["check-rbase",]
    runs-on: "ubuntu-latest"
    steps:
      - id: "checkout"
        name: "Checkout `containers` repository"
        uses: "actions/checkout@v3"
        with:
          fetch-depth: 0

      - id: "checkout-HEAD"
        run: |
          git pull
          git checkout HEAD

      - id: "setup-node"
        name: "Setup NodeJS"
        uses: "actions/setup-node@v3"
        with:
          node-version: "18" 

      - id: "setup-pnpm"
        name: "Setup `pnpm`"
        uses: "pnpm/action-setup@v2"
        with:
          version: "latest"
          run_install: false

      - name: "Get `pnpm` store"
        id: "pnpm-store"
        shell: "bash"
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: "actions/cache@v3"
        id: "pnpm-cache"
        name: "Setup `pnpm` cache"
        with:
          path: "${{ steps.pnpm-store.outputs.STORE_PATH }}"
          key: "${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}"
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: "Install dependencies"
        id: "pnpm-install"
        run: "pnpm install"

      - name: "Computes all version pairings for Dockerfile"
        run: |
          pnpm compute-versions

      - name: "Add `docker.d/**/Dockerfile`"
        uses: "endbug/add-and-commit@v9"
        with:
          add: |
            ./docker.d/**/Dockerfile
            ./versions.d/docker-versions.json
          message: "Tracking `docker.d/**/Dockerfile` for verbosity"
          push: true
